/********************************************************************************
 * Copyright (c) 2020, 2022 Contributors to the Eclipse Foundation
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 ********************************************************************************/
apply from: "$rootDir/gradle/base.gradle"

def COMMON = 'common'
def WORKER = 'worker'
def MASTER = 'master'
def HEAP_DUMP_ANALYZER_API = 'heap-dump-analyzer:api'
def HEAP_DUMP_ANALYZER_IMPL = 'heap-dump-analyzer:impl'
def HEAP_DUMP_ANALYZER_ECLIPSE_MAT_DEPS = 'heap-dump-analyzer:eclipse-mat-deps'
def HEAP_DUMP_ANALYZER_PROVIDER = 'heap-dump-analyzer:provider'
def HEAP_DUMP_ANALYZER_HOOK = 'heap-dump-analyzer:hook'
def GC_LOG_ANALYZER = 'gc-log-analyzer'
def THREAD_DUMP_ANALYZER = 'thread-dump-analyzer'

[COMMON, WORKER, MASTER, HEAP_DUMP_ANALYZER_API, HEAP_DUMP_ANALYZER_IMPL, HEAP_DUMP_ANALYZER_PROVIDER, HEAP_DUMP_ANALYZER_HOOK, GC_LOG_ANALYZER, THREAD_DUMP_ANALYZER].each {
    name ->
        project("$name") {
            apply plugin: 'java'
            apply plugin: 'jacoco'
            java {
                toolchain {
                    languageVersion = JavaLanguageVersion.of(11)
                }
            }
            compileJava {
                targetCompatibility = JavaVersion.VERSION_11
                sourceCompatibility = JavaVersion.VERSION_11
                options.encoding = "UTF-8"
                options.compilerArgs << "-Xlint:deprecation"
            }
            tasks.withType(JavaCompile).configureEach {
                javaCompiler = javaToolchains.compilerFor {
                    languageVersion = JavaLanguageVersion.of(11)
                }
            }
            test {
                useJUnit()
            }
            jacocoTestReport {
                dependsOn test
            }
        }
}

[COMMON, WORKER, MASTER, HEAP_DUMP_ANALYZER_API, GC_LOG_ANALYZER, THREAD_DUMP_ANALYZER].each {
    name ->
        project("$name") {
            ext {
                vertx_version = '4.1.2'
            }

            def lombok_version = '1.18.22'
            dependencies {
                compileOnly "org.projectlombok:lombok:$lombok_version"
                annotationProcessor "org.projectlombok:lombok:$lombok_version"

                testCompileOnly "org.projectlombok:lombok:$lombok_version"
                testAnnotationProcessor "org.projectlombok:lombok:$lombok_version"

                constraints {
                    implementation('io.netty:netty-codec-http:4.1.53.Final') {
                        because 'https://snyk.io/vuln/SNYK-JAVA-IONETTY-1020439'
                    }
                }
            }
        }
}

def deps_dir_name = "mat-deps"
def deps_dir_path = project(HEAP_DUMP_ANALYZER_ECLIPSE_MAT_DEPS).projectDir.parentFile.path + '/' + deps_dir_name
[HEAP_DUMP_ANALYZER_ECLIPSE_MAT_DEPS, HEAP_DUMP_ANALYZER_IMPL, HEAP_DUMP_ANALYZER_PROVIDER, WORKER, HEAP_DUMP_ANALYZER_HOOK].each {
    name ->
        project("$name") {
            ext {
                mat_deps_dir_name = deps_dir_name
                mat_deps_dir_path = deps_dir_path
                osgi_jar = "org.eclipse.osgi-3.18.200.jar"
            }
        }
}
