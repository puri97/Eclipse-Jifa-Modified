# Copyright (c) 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0

#%d-%02d-%02d %02d:%02d:%02d (see os::local_time_string)
TIME=\\d\\d\\d\\d-\\d\\d-\\d\\d \\d\\d:\\d\\d:\\d\\d
TIME_FORMAT=yyyy-MM-dd HH:mm:ss
PID=(\\d+):
VERSION=Full thread dump (?<info>.+):

SMR_HEAD=Threads class SMR info:

JAVA_THREAD="(?<name>.+?)" #(?<id>\\d+)(?<daemon> daemon)? prio=(?<priority>\\d+) os_prio=(?<osPriority>-?\\d+)( cpu=(?<cpu>.+?))?( elapsed=(?<elapsed>.+?))?( elapsed=(?<elapsed1>.+?))?( allocated=(?<allocated>.+?))?( defined\\_classes=(?<definedClasses>.+?))? tid=(?<tid>.+?) nid=(?<nid>[0-9a-fx]+) (?<state>.+?) *\\[(?<lastJavaSP>.+?)]
JAVA_STATE=java.lang.Thread.State: (?<state>.+?)
JAVA_FRAME=at (?<class>.+)\\.(?<method>.+)\\((?<module>.+?/)?(?<source>.+?)\\)(nmethod .+?)?

NO_JAVA_THREAD="(?<name>.+?)" os_prio=(?<osPriority>\\d+)( cpu=(?<cpu>.+?))?( elapsed=(?<elapsed>.+?))? tid=(?<tid>.+?) nid=(?<nid>[0-9a-fx]+) (?<state>.+?)
JNI_GLOBAL_REFS=JNI global (references: (?<all>\\d+)|refs: (?<strong>\\d+), weak refs: (?<weak>\\d+))

WAITING_ON=- waiting on <(?<address>.+?)> \\(a(?<isClass> java.lang.Class for)? (?<class>.+?)\\)
WAITING_TO_RE_LOCK=- waiting to re-lock in wait\\(\\) <(?<address>.+?)> \\(a(?<isClass> java.lang.Class for)? (?<class>.+?)\\)
PARKING=- parking to wait for  ?<(?<address>.+?)> \\(a (?<class>.+?)\\)
WAITING_ON_CLASS_INITIALIZATION=- waiting on the Class initialization monitor for (?<class>.+?)

LOCKED=- locked <(?<address>.+?)> \\(a(?<isClass> java.lang.Class for)? (?<class>.+?)\\)
WAITING_TO_LOCK=- waiting to lock <(?<address>.+?)> \\(a(?<isClass> java.lang.Class for)? (?<class>.+?)\\)
ELIMINATED_SCALAR_REPLACED=- eliminated <owner is scalar replaced> \\(a (?<class>.+?)\\)
ELIMINATED=- eliminated <(?<address>.+?)> \\(a(?<isClass> java.lang.Class for)? (?<class>.+?)\\)

LOCKED_OWNABLE_SYNCHRONIZERS=Locked ownable synchronizers:
NONE=- None
LOCKED_SYNCHRONIZER=- <(?<address>.+?)> \\(a (?<class>.+?)\\)

DEAD_LOCK_HEAD=Found one Java-level deadlock:
DEAD_LOCK_THREAD="(?<name>.+?)":
DEAD_LOCK_WAITING_TO_LOCK_MONITOR=waiting to lock monitor (?<monitorAddress>.+?)  \\((object (?<objectAddress>.+?), a (?<class>.+?)|JVMTI raw monitor)\\),?
DEAD_LOCK_WAITING_TO_LOCK_SYNCHRONIZER=waiting for ownable synchronizer (?<address>.+?), \\(a ?<class>.+?\\)
DEAD_HELD_INFO=(?<inJNI>in JNI)?, which is held by (\"(?<name>.+?)\"|UNKNOWN_owner_addr=(?<addr>.+?))
DEAD_LOCK_STACK_HEAD=Java stack information for the threads listed above:
DEAD_FOUND=Found (?<count>\\d+) deadlocks?\\.
